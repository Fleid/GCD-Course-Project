install.packages("swirl")
> library("swirl")
library("swirl")
library(swirl)
swirl()
my_vector <- as.vector(1:20)
info()
?as
my_vector
my_vector <- 1:20
my_vector
dim(my_vector)
legnth(my_vector)
length(my_vector)
dim(my_vector)<- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vecotr
my_vector
class(my_vector)
my_matrix <- my_vector
install.packages("rpostgresql")
install.packages("rmysql")
install.packages("rmysql")
install.packages("rmysql", type="source")
install.packages("RMySQL", type="source")
install.packages("RMySQL")
library(RMySQL)
install.packages("RPostgreSQL")
setwd("~/Documents/GitHub/GCD-Week3-4")
setwd("~/Documents/GitHub/GCD-Week4")
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile="Q1.csv",method="curl")
.read.csv
?read.csv
Q1 <- read.csv("Q1.csv",header=RUE, sep=",")
Q1 <- read.csv("Q1.csv",header=TRUE, sep=",")
head(Q1)
colnames(Q1)
strsplit(colnames(Q1),"wgtp")
?strsplit
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ",destfile="FGDP.csv",method="curl")
FGDP  <- read.csv(file="FGDP.csv", header = FALSE, sep = ",", skip=5)
head(FGDP)
FGDP$N5 <- as.numeric(gsub(",","",DF$V5))
FGDP$N5 <- as.numeric(gsub(",","",FGDP$V5))
summary(FGDP)
FGDP <- FGDP[(FGDP$V1!="" & FGDP$V2!=""),]
FGDP  <- read.csv(file="FGDP.csv", header = FALSE, sep = ",", skip=5)
FGDP <- FGDP[(FGDP$V1!="" & FGDP$V2!=""),]
FGDP$N5 <- as.numeric(gsub(",","",FGDP$V5))
summary(FGDP)
FGDP$countryNames <- FGDP$V4
grep("^United",countryNames), 3
grep("^United",countryNames)
grep("^United",FGDP$countryNames)
grep("^United",FGDP$countryNames,3)
FGDP
FGDP[order(FGDP$countrNames),]
FGDP[order(FGDP$countryNames),]
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",destfile="FED.csv",method="curl")
FED  <- read.csv(file="FED.csv", header = TRUE, sep = ",")
FGDP  <- read.csv(file="FGDP.csv", header = FALSE, sep = ",", skip=5)
FGDP <- FGDP[(FGDP$V1!="" & FGDP$V2!=""),]
mergedData = merge(FGDP,FED,by.x="V1",by.y="CountryCode",all=FALSE)
summary(mergedData)
mergedData$"Special.Notes"
grep(mergedData$"Special.Notes","^Fiscal")
grep(mergedData$"Special.Notes","^Fiscal*")
grep("^Fiscal",mergedData$"Special.Notes")
mergedData[,grep("^Fiscal",mergedData$"Special.Notes")]
mergedData[grep("^Fiscal",mergedData$"Special.Notes"),]
mergedData[,grep("^Fiscal",mergedData$"Special.Notes"),"Special.Notes"]
mergedData[,grep("^Fiscal",mergedData$"Special.Notes"),mergedData$"Special.Notes"]
mergedData["Special.Notes",grep("^Fiscal",mergedData$"Special.Notes")]
mergedData[mergedData$"Special.Notes",grep("^Fiscal",mergedData$"Special.Notes")]
mergedData[,grep("^Fiscal",mergedData$"Special.Notes")]
mergedData[grep("^Fiscal",mergedData$"Special.Notes"),]
mergedData[grep("^Fiscal",mergedData$"Special.Notes"),mergedData$"Special.Notes"]
mergedData[grep("^Fiscal",mergedData$"Special.Notes"),]$"Special.Notes"
DF <- mergedData[grep("^Fiscal",mergedData$"Special.Notes"),]$"Special.Notes"
substr?
;
?substr
DF[grep("June")]
DF[grep("June"),DF$1]
DF[grep("June"),DF$V1]
DF[grep("June"),DF$"Special.Notes"]
DF[grep("June",DF$"Special.Notes"),]
DF[grep("June",DF),]
DF[grep("June",DF)]
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.package("quantmod")
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
summary(sampleTimes)
grep("^2012",sampleTimes)
summary(grep("^2012",sampleTimes))
table(grep("^2012",sampleTimes))
nbrows(grep("^2012",sampleTimes))
count(grep("^2012",sampleTimes))
grep("^2012",sampleTimes)
nrow(grep("^2012",sampleTimes))
ncol(grep("^2012",sampleTimes))
nrow(as.dataframe(grep("^2012",sampleTimes))
)
nrow(as.data.frame(grep("^2012",sampleTimes))
)
sampleTimes
sampleTimes[,grep("^2012",sampleTimes)]
sampleTimes[grep("^2012",sampleTimes)]
ST <- sampleTimes[grep("^2012",sampleTimes)]
library(lubridate)
colnames(ST)
colnames(ST) <- Date
colnames(ST) <- "Date""
;
)
q
exit
quit
;
""
colnames(ST) <- "Date"
?as.data.frame
DF <- as.data.frame(sampleTimes[grep("^2012",sampleTimes)])
colnames(DF) <- c("Date","DD")
colnames(DF) <- c("Date")
DF$NN <- ymd(DF$Date)
head(DF)
DF$wd <- weekdays(DF$NN)
DF
nrow(DF[DF$wd=="Lundi",])
setwd("~/Documents/GitHub/GCD-Course-Project")
ActivityLabels <- read.csv("activity_labels.txt",sep=" ",head=FALSE)
?read.csv
ActivityLabels <- read.csv("activity_labels.txt",sep=" ",header=FALSE)
setwd("~/Documents/GitHub/GCD-Course-Project/UCI HAR Dataset")
ActivityLabels <- read.csv("activity_labels.txt",sep=" ",header=FALSE)
ActivityLabels
colnames(ActivityLabels) <- c("ActivityLabelID","ActivityLabel")
colnames(ActivityLabels) <- c("ActivityLabelID","ActivityLabelName")
ActivityLabels
trim(ActivityLabels$ActivityLabelName)
library("stringr")
?trim
?trim
?str-trim
?str_trim
str_trim(ActivityLabels$ActivityLabelName,side="both")
ActivityLabels$ActivityLabelName <- str_trim(ActivityLabels$ActivityLabelName,side="both")
ActivityLabels
ActivityLabels <- read.csv("activity_labels.txt",sep=" ",header=FALSE)
colnames(ActivityLabels) <- c("ActivityLabelID","ActivityLabelName")
FeatureLabels <- read.csv("features.txt",sep=" ",header=FALSE)
colnames(FeatureLabels) <- c("FeatureLabelID","FeatureLabelName")
FeatureLabels
setwd("~/Documents/GitHub/GCD-Course-Project")
ActivityLabels <- read.csv("/UCI HAR Dataset/activity_labels.txt",sep=" ",header=FALSE)
colnames(ActivityLabels) <- c("ActivityLabelID","ActivityLabelName")
ActivityLabels <- read.csv("../UCI HAR Dataset/activity_labels.txt",sep=" ",header=FALSE)
ActivityLabels <- read.csv("UCI HAR Dataset/activity_labels.txt",sep=" ",header=FALSE)
###### Merging the training and the test sets to create one data set
ActivityLabels
source('~/Documents/GitHub/GCD-Course-Project/run_analysis.R')
ActivityLabels
FeatureLabels
trainX <- read.csv("UCI HAR Dataset/train/X_train.txt",sep=" ",header=FALSE)
head(trainX)
trainY <- read.csv("UCI HAR Dataset/train/Y_train.txt",sep=" ",header=FALSE)
head(trainY,1)
head(trainY)
testX <- read.csv("UCI HAR Dataset/test/X_test.txt",sep=" ",header=FALSE)
?read.csv
?rest.txt
?rest.text
head(textX,1)
head(testX,1)
testX <- read.csv("UCI HAR Dataset/test/X_test.txt",sep=" ",header=FALSE)
testX <- read.csv("UCI HAR Dataset/test/X_test.txt",sep=" ",header=FALSE, strip.white=TRUE)
head(testX)
?read.fwf
c <- rep(16,561)
c
x <- read.fwf(file="UCI HAR Dataset/test/X_test.txt",widths=rep(16,561))
featureLabels$FeatureLabelName
featureLabels
featureLabels <- read.csv("UCI HAR Dataset/features.txt",sep=" ",header=FALSE)
colnames(FeatureLabels) <- c("FeatureLabelID","FeatureLabelName")
featureLabels$FeatureLabelName
featureLabels
colnames(featureLabels) <- c("FeatureLabelID","FeatureLabelName")
featureLabels$FeatureLabelName
head(x,1)
testX <- read.fwf(file="UCI HAR Dataset/test/X_test.txt",widths=rep(16,561), col.names=featureLabels$FeatureLabelName)
head(testX)
View(amzn)
activityLabels <- read.csv("UCI HAR Dataset/activity_labels.txt",sep=" ",header=FALSE)
colnames(activityLabels) <- c("ActivityLabelID","ActivityLabelName")
featureLabels <- read.csv("UCI HAR Dataset/features.txt",sep=" ",header=FALSE)
colnames(featureLabels) <- c("FeatureLabelID","FeatureLabelName")
View(activityLabels)
View(featureLabels)
testX <- read.fwf(file="UCI HAR Dataset/test/X_test.txt",widths=rep(16,561), col.names=featureLabels$FeatureLabelName)
.read.csv
?read.csv
activityLabels <- read.csv("UCI HAR Dataset/activity_labels.txt",sep=" ",header=FALSE, col.names = c("ActivityLabelID","ActivityLabelName")
)
featureLabels <- read.csv("UCI HAR Dataset/features.txt",sep=" ",header=FALSE, col.names = c("FeatureLabelID","FeatureLabelName"))
testY <- read.csv("UCI HAR Dataset/test/Y_test.txt",sep=" ",header=FALSE, col.names = "ActivityLabelID")
trainSubject <- read.csv("UCI HAR Dataset/test/subject_test.txt",sep=" ",header=FALSE, col.names = "SubjectID")
testSubject <- read.csv("UCI HAR Dataset/test/subject_test.txt",sep=" ",header=FALSE, col.names = "SubjectID")
trainY <- read.csv("UCI HAR Dataset/train/Y_train.txt",sep=" ",header=FALSE, col.names = "ActivityLabelID")
trainSubject <- read.csv("UCI HAR Dataset/train/subject_train.txt",sep=" ",header=FALSE, col.names = "SubjectID")
trainX <- read.fwf(file="UCI HAR Dataset/train/X_train.txt",widths=rep(16,561), col.names=featureLabels$FeatureLabelName)
testAll <- testSubject$SubjectID
testAll$SubjectID <- testSubject$SubjectID
testAll$ActivityLabelID <- trainY$ActivityLabelID
testX <- testY$ActivityLabelID
testX <- read.fwf(file="UCI HAR Dataset/test/X_test.txt",widths=rep(16,561), col.names=featureLabels$FeatureLabelName)
testX_BK <- testX
trainX_BK <- trainX
testX$ActivityLabelID <- testY$ActivityLabelID
testX$SubjectID <- testSubject$SubjectID
trainX$ActivityLabelID <- trainY$ActivityLabelID
trainX$SubjectID <- trainSubject$SubjectID
testAll <- rbind(testX,trainX)
allX <- rbind(testX,trainX)
head(allX)
colNames(AllX)
colnames(AllX)
colnames(allX)
allX[,which(names(allX) %in% c("mean.","std."))]
allX[,(names(allX) %in% c("mean.","std."))]
allX[,(names(allX) %in% c("Mean.","std."))]
?like
?in
?%in%
allX[,grep(names(allX,"mean")]
allX[,grep("mean",names(allX))]
head(allX[,grep("mean",names(allX))],1)
head(allX[,grep("Mean",names(allX))],1)
head(allX[,grep("-mean",names(allX))],1)
head(allX[,grep(".mean",names(allX))],1)
head(allX[,grep(".mean",names(allX)) | grep(".std",names(allX))],1)
head(allX[,grep(".std",names(allX))],1)
msX <- as.data.frame(allX$SubjectID)
msX <- allX[,grep(".std",names(allX))]
msX <- allX[,grep(".mean",names(allX))]
msX <- as.data.frame(allX$ActivityLabelID)
msX <- allX[,grep(".mean",names(allX))]
msX <- allX[,grep(".std",names(allX))]
msX <- as.data.frame(allX$SubjectID)
msX$ActivityLabelID <- as.data.frame(allX$ActivityLabelID)
allX[,grep(".std|.mean|ActivityLabelID|SubjectID",names(allX))]
msX <- allX[,grep(".std|.mean|ActivityLabelID|SubjectID",names(allX))]
head(msX,1)
?merge
msXa <- merge(msX,activityLabels,by.x="ActibityLabelID",by.y="ActivityLabelID")
msXa <- merge(msX,activityLabels,by.x="ActivityLabelID",by.y="ActivityLabelID")
head(msXa)
colnames(msXa)
msX <- allX[,grep(".std.|.mean.|ActivityLabelID|SubjectID",names(allX))]
msXa <- merge(msX,activityLabels,by.x="ActivityLabelID",by.y="ActivityLabelID")
tidyX <- melt(msXa, id=c(SubjectID,ActivityLabelName),measures.vars=grep(".std.|.mean.",names(msXa)))
library(reshape2)
tidyX <- melt(msXa, id=c(SubjectID,ActivityLabelName),measures.vars=grep(".std.|.mean.",names(msXa)))
tidyX <- melt(msXa, id=c(SubjectID,ActivityLabelName),measures.vars=grep(".std.|.mean.",names(msXa)))
tidyX <- melt(msXa, id=c("SubjectID","ActivityLabelName"),measures.vars=grep(".std.|.mean.",names(msXa)))
tidyX
grep(".std.|.mean.",names(msXa))
grep(".std.|.mean.",colnames(msXa))
head(msXa)
colnames(msXa)
mtcars
head(mtcars)
carMelt <- melt(mtcars, id=c("carname","gear","cyl"),measure.vars=c("mpg","hp"))
carMelt <- melt(mtcars, id=c("gear","cyl"),measure.vars=c("mpg","hp"))
head(carMelt)
unique(tidyX$variable)
tidyX <- melt(msXa, id=c("SubjectID","ActivityLabelID","ActivityLabelName"),measures.vars=grep(".std.|.mean.",names(msXa)))
head(tidyX)
finalX <- dcast(tidyX, c("SubjectID","ActivityLabelID","ActivityLabelName") ~ variable, mean)
finalX
head(finalX)
cylData<- dcast(carMelt, cyl ~ variable,mean)
cylData
dcast?
@@
?dcast
dcast(tidyX, SubjectID ~ ActivityLabelID ~ ActivityLabelName ~ variable,mean)
names(airquality) <- tolower(names(airquality))
aqm <- melt(airquality, id=c("month", "day"), na.rm=TRUE)
head(aqm)
acast(aqm, day ~ month ~ variable)
dcast(aqm, day ~ month ~ variable)
dcast(aqm, month ~ variable, mean)
dcast(tidyX, SubjectID + ActivityLabelName ~ variable,mean)
head( dcast(tidyX, SubjectID + ActivityLabelName ~ variable,mean) )
head( dcast(tidyX, SubjectID + ActivityLabelName ~ variable,mean) ,10)
finalX <- dcast(tidyX, SubjectID + ActivityLabelName ~ variable,mean)
source('~/Documents/GitHub/GCD-Course-Project/run_analysis.R')
head(finalX)
colnames(finalX)
colnames(msX)
msX <- allX[,grep("\.std\.|\.mean\.|ActivityLabelID|SubjectID",names(allX))]
msX <- allX[,grep(".std\.|.mean\.|ActivityLabelID|SubjectID",names(allX))]
msX <- allX[,grep(".std.|.mean..|ActivityLabelID|SubjectID",names(allX))]
colnames(msX)
msX <- allX[,grep(".std.|.mean\.|ActivityLabelID|SubjectID",names(allX))]
?grep
msX <- allX[,grep("(.std.)|(.mean\.)|(ActivityLabelID)|(SubjectID)",names(allX))]
msX <- allX[,grep("(.std.)|(.mean.)|(ActivityLabelID)|(SubjectID)",names(allX))]
colnames(msX)
msX <- allX[,grep("(\\.std\\.)|(\\.mean\\.)|(ActivityLabelID)|(SubjectID)",names(allX))]
colnames(msX)
msX <- allX[,grep("(\\.std\\.)|(\\.mean\\.)|(ActivityLabelID)|(SubjectID)",names(allX))]
msXa <- merge(msX,activityLabels,by.x="ActivityLabelID",by.y="ActivityLabelID")
tidyX <- melt(msXa, id=c("SubjectID","ActivityLabelID","ActivityLabelName"),measures.vars=grep(".std.|.mean.",names(msXa)))
finalX <- dcast(tidyX, SubjectID + ActivityLabelName ~ variable,mean)
head(finalX)
colnames(finalX)
?write.table
write.table(finalX,file="tidyX.txt",append=FALSE,row.names=FALSE,col.names=TRUE)
write.table(finalX,file="tidyX.txt",append=FALSE,row.names=FALSE,col.names=TRUE)
